include:
  - project: 'omniverse/sectools/vault'
    file: '/templates/v2/omni-packman-s3-creds.yml'
  - project: 'omniverse/sectools/vault'
    file: '/templates/v2/omni-codesign-creds.yml'
  # ^^^ includes above are needed for the vault invocation.

build_publish:
  extends: .defaults
  stage: pkg_publish
  before_script:
    - .\build.bat --clean --release
  script:
    - .\build.bat --release
    - .\repo.bat package --mode main_package --platform windows-x86_64 --config release
  # Artifacts required to make the publishing step work
  artifacts:
    when: on_success
    paths:
    - _build/packages
  rules:
    ## Add manual job on merge commit to master
    - if: $CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
    - if: $CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "push"
      when: manual
    - when: never

pkg_publish:
  extends: .defaults
  stage: pkg_publish
  when: manual
  tags:
    - linux
  needs:
    - job: build_publish
      artifacts: true
  script:
    - set -eu
    - |
      mkdir tempbin
      curl -fsSL https://urm.nvidia.com/artifactory/sw-kaizen-data-generic/com/nvidia/vault/vault-agent/1.5.2/nvidia_vault_agent_v1.5.2_linux_amd64.zip \
      | bsdtar -xvf- -C tempbin
      chmod +x tempbin/vault
      export PATH="$PWD/tempbin:$PATH"
    - !reference [.omni_codesign_get_secrets, omni_codesign_get_secrets]
    - !reference [.omni_s3_write_get_secrets, omni_s3_write_get_secrets]
    - ./build.sh --fetch-only --release --no-docker
    - fail_wr=0
    - ./repo.sh ci publish_to_launcher || fail_wr=1
    - echo "WinRel=${fail_wr}"
    - '[ "$fail_wr" -eq 0 ] || exit 1'
  rules:
    ## Add manual job on merge commit to master
    - if: $CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: on_success
    - if: $CI_COMMIT_REF_NAME == "master" && $CI_PIPELINE_SOURCE == "push"
      when: on_success
    - when: never
