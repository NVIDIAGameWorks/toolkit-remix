[repo_auto_update_deps]
# Tool name
command = "auto_update_deps"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_auto_update_deps.py:setup_repo_tool"

[repo_bump_changed_extensions]
# Tool name
command = "bump_changed_extensions"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_bump_changed_extensions.py:setup_repo_tool"

# The target commit to compare the changelog against
original_commit = "origin/main"
# The source commit to compare the changelog against
source_commit = "HEAD"
# Path prefix for extensions
extension_path_prefix = "source/extensions"
# Default changelog text
default_changelog_text = "### Changed\n- "


[repo_check_changelog]
# Tool name
command = "check_changelog"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_check_changelog.py:setup_repo_tool"

# Name of main required file
file_name = "CHANGELOG.md"
# Header of section where change is required
section_header = "[Unreleased]"
# Pattern delineating sections
section_pattern = "^## "
# Threshold to determine if 2 lines are similar enough to be considered modified
similarity_threshold = 0.5
# The target commit to compare the changelog against
original_commit = "origin/main"
# The source commit to compare the changelog against
source_commit = "HEAD"
# Path prefix for extensions
extension_path_prefix = "source/extensions"
# Changelog file
extension_changelog_file = "docs/CHANGELOG.md"
# Extension cofig file
extension_config_file = "config/extension.toml"

[repo_get_release_changelog]
# Tool name
command = "get_release_changelog"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_get_release_changelog.py:setup_repo_tool"

# Name of required file
file_name = "CHANGELOG.md"
# Header of section where change is required
section_header = "[Unreleased]"
# Pattern delineating sections
section_pattern = "\n## "

[repo_delete_changelog]
# Tool name
command = "delete_changelog"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_delete_changelog.py:setup_repo_tool"

# Name of required file
file_name = "CHANGELOG.md"
# Header of section where change is required
start_line = "^## \\[Unreleased\\]\n$"
# Pattern delineating sections
end_line = "^## \\[.*\\]\n$"

[repo_check_test_file_location]
# Tool name
command = "check_test_file_location"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_check_test_file_location.py:setup_repo_tool"
# files/folders that we will check, using pathlib glob syntax
files.include = ["**/source/**/tests/**/test_*.py", "**/source/**/tests/*.py"]
# files/folders that we will not check, using pathlib glob syntax
files.exclude = [
    "**/lightspeed.common/lightspeed/common/tools/**/*",
    "**/omni.flux.utils.tests/omni/flux/utils/tests/*",
    "**/omni.flux.property_widget_builder.widget/omni/flux/property_widget_builder/widget/tests/ui_components.py",
]
# files/folders that we allow, using pathlib glob syntax
rule.allow_paths = [
    "**/source/**/tests/__init__.py",
    "**/source/**/tests/unit/**/*.py",
    "**/source/**/tests/e2e/**/*.py"
]

[repo_check_forbidden_words]
# Tool name
command = "check_forbidden_words"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_check_forbidden_words.py:setup_repo_tool"
# files/folders that we will check, using pathlib glob syntax
files.include = ["**/source/**/omni.flux.*/**/*.py", "**/source/**/omni.flux.*/**/*.toml"]
# words that we will try to find. If there words exist, the process will crash
words.exclude = ["lightspeed", "trex"]

[repo_measure_startup_time]
# Tool name
command = "measure_startup_time"
# [python module name or path]:[function name]
entry_point = "${root}/tools/utils/repo_measure_startup_time.py:setup_repo_tool"
# Command to run the app for testing
app_command = ".\\_build\\windows-x86_64\\release\\lightspeed.app.trex.bat --no-window --/app/quitAfter=50 --/crashreporter/enabled=0"
# Maximum startup time that will not trigger an alert
time_limit = 20
# Number of times to run the app
number = 50
