# Normalize text files on commit to LF endings by default
* text=auto
# Make sure Windows batch files preserve CR/LF line endings, otherwise they may not be able to execute.  Windows
# batch files require a CR/LF for labels to work properly, otherwise they may fail when labels straddle 512-byte
# block boundaries.  This is important when files are downloaded through a zip archive that was authored on a
# Linux machine (the default behavior on GitHub)
*.bat text eol=crlf
*.cmd text eol=crlf
*.kit text eol=crlf
# Make sure shell scripts have LF line endings, even when checked out on a Windows client with autocrlf=true
*.sh text eol=lf
# All files under data go into Git LFS
data/** filter=lfs diff=lfs merge=lfs -text
source/extensions/**/data/** filter=lfs diff=lfs merge=lfs -text
*.json !filter !diff !merge text
*.usda !filter !diff !merge text
*.usda text eol=lf
*.exe filter=lfs diff=lfs merge=lfs -text
*.dll filter=lfs diff=lfs merge=lfs -text
*.bin filter=lfs diff=lfs merge=lfs -text
nvngx_dlisr.dll filter=lfs diff=lfs merge=lfs -text
FreeImage.dll filter=lfs diff=lfs merge=lfs -text
vcomp140d.dll filter=lfs diff=lfs merge=lfs -text
vcomp140.dll filter=lfs diff=lfs merge=lfs -text
realesrnet-x4plus.bin filter=lfs diff=lfs merge=lfs -text
realesrgan-x4plus.bin filter=lfs diff=lfs merge=lfs -text
realesrgan-x4plus-anime.bin filter=lfs diff=lfs merge=lfs -text
*.pth filter=lfs diff=lfs merge=lfs -text
source/extensions/lightspeed.color_to_roughness.core/lightspeed/color_to_roughness/core/tools/Color_Roughness/latest_net_G.pth filter=lfs diff=lfs merge=lfs -text
source/extensions/lightspeed.color_to_roughness.core/lightspeed/color_to_roughness/core/tools/Color_Roughness/latest_net_D.pth filter=lfs diff=lfs merge=lfs -text
