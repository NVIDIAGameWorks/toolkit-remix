########################################################################################################################
# Repo tool base settings
########################################################################################################################

[repo]
logging = "warn"

extra_tool_paths = [
	"${root}/_build/$platform/release/kit/dev",
	"${root}/_build/$platform/debug/kit/dev"
]


########################################################################################################################
# Build tool setup
########################################################################################################################

[repo_build]

# List of packman projects to pull (in order)
fetch.packman_host_files_to_pull = [
    "${root}/deps/host-deps.packman.xml",
]

fetch.packman_target_files_to_pull = [
    "${root}/deps/kit-sdk.packman.xml",
    "${root}/deps/rtx-plugins.packman.xml",
    "${root}/deps/target-deps.packman.xml",
    "${root}/deps/assets.packman.xml",
]

stage_files.extra_mapping.kit_sdk_debug = "${root}/_build/$platform/debug/kit"
stage_files.extra_mapping.kit_sdk_release = "${root}/_build/$platform/release/kit"

vscode.python = "${root}/_build/$platform/release/kit/python"

vscode.python_env.PYTHONPATH= [
  "$$$${PYTHONPATH}",
  "${env:PYTHONPATH}",
  "$root/_build/pip-packages",
  "$repo_deps/repo_man",
  "$repo_deps/repo_build",
  "$repo_deps/repo_fileutils",
  "$repo_deps/repo_format",
  "$repo_deps/repo_package",
  "$root/tools/repoman",
  "$root/_build/$platform/$config/exts/*",
  "$root/_build/$platform/$config/kit/exts/*",
  "$root/_build/$platform/$config/kit/extscore/*",
  "$root/_build/$platform/$config/kit/plugins/bindings-python/",
]

vscode.python_env.PATH= [
  "$$$${PATH}", 
  "$root/_build/$platform/$config",
]

vscode.write_python_paths_in_settings_json = true
vscode.generate_python_env_file = false


msbuild.sln_file = "kit-examples.sln"
msbuild.vs_version = "vs2017"

stage_files.error_if_missing = true

licensing.enabled = true
licensing.fail_on_missing = true

post_build.commands = [
    ["${root}/repo${shell_ext}", "precache_exts", "-c", "${config}"] 
]

########################################################################################################################
# Test Runner
########################################################################################################################

[repo_test]

# NOTE: To find more info on repo_test settings look into: '_repo/deps/repo_test/repo_tools.toml'

test_root = "$root/_build/$platform/$config"

# When running from package, look for package using that path/pattern:
archive_pattern = "${root}/_build/packages/kit-template*${config}.7z"
archive_post_unpack_cmd = ["${test_root}/pull_kit_sdk${shell_ext}"]

# Default --config argument:
default_config = "release"

[repo_test.suites.alltests]
kind = "glob_and_exec"
path = "${test_root}"

stdout_fail_patterns.include = []
stdout_fail_patterns.exclude = []

[[repo_test.suites.alltests.group]]
# Run all tests experiences (ones that start with "tests-")
include = ["tests-*${shell_ext}"]
exclude = [
  #"tests-omni.anim.*",
]
args = [""]
timeout = 300
tc_report_enabled = true


########################################################################################################################
# Documentation building
########################################################################################################################

[repo_build_docs]
enabled = true

# Use python from kit sdk
python_path =  "${root}/_build/kit/${config}/_build/${platform}/${config}/python${shell_ext}"

# differentiate debug/release docs
enable_build_config_choice = true

# Add all extensions to docs sys.path
extra_sys_paths = [
    "${root}/_build/${platform}/${config}/exts/*"
]


########################################################################################################################
# Build Number 
########################################################################################################################

[repo_build_number]
enabled = true


########################################################################################################################
# Packaging 
########################################################################################################################

[repo_package.packages."kit-template"]
root = "_build/$${platform}/$${config}"
omniverse_flow_version_scheme = true
package_per_config = true
append_config = true

[repo_package.packages]
"example.mixed_ext".kit_extension_package = true


########################################################################################################################
# Package publishing to packman
########################################################################################################################

[repo_publish]
enabled = true

packages = ["*"]


########################################################################################################################
# Extensions publisher
########################################################################################################################

[repo_publish_exts]
enabled = true

kit_path = "${root}/_build/$platform/$config/kit/kit${exe_ext}"

publish_root = "${root}/_build/$platform/$config"

ext_folders = [
  "${publish_root}/exts"
]

# Extensions to publish, include and exclude among those discovered by kit. Wildcards are supported.
exts.include = [
    "example.cpp_ext",
    "example.mixed_ext",
    "example.python_ext"
]
exts.exclude = []

# Registries to publish to.
registries = [
    { name = "kit/default", url = "omniverse://kit-extensions.ov.nvidia.com/exts/kit/default" },
]

# verify before publishing
publish_verification = true

# When running from package, look for package using that path/pattern:
archive_pattern = "${root}/_build/packages/kit-template@*${config}.7z"


########################################################################################################################
# Extensions precacher
########################################################################################################################

[repo_precache_exts]
enabled = true

kit_path = "${root}/_build/$platform/$config/kit/kit${exe_ext}"

# Extra args to pass to kit
kit_extra_args = []

# Folder to store cache extensions into
cache_path = "${root}/_build/${platform}/${config}/exts"

ext_folders = [
  "${root}/_build/$platform/$config/exts"
]

# Apps to run and precache
apps = [
    "${root}/_build/$platform/$config/apps/omni.app.precache_exts_demo.kit"
]

# Registries to use
registries = [
    { name = "kit/default", url = "omniverse://kit-extensions.ov.nvidia.com/exts/kit/default" },
]
