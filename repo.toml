########################################################################################################################
# Repo tool base settings
########################################################################################################################

[repo]
logging = "warn"

# Use Kit Template repo configuration as a base. Only override things specific to the repo.
import_configs = ["${root}/_repo/deps/repo_kit_tools/kit-template/repo.toml"]

# Reposiory Name. It is used for solution name and final package name
name = "rtx_remix"

########################################################################################################################
# Test Runner
########################################################################################################################

# Run all test suites
[repo_test.suites.alltests]
kind = "glob_and_exec"
path = "${test_root}"

[[repo_test.suites.alltests.group]]
# Run all test
include = [
    "tests-omni.app.lightspeed${shell_ext}",
    "tests-lightspeed.*${shell_ext}"
]
exclude = [
    "tests-omni.app.lightspeed${shell_ext}",  # freeze for whatever reason
]
"platform:linux-x86_64".exclude = [
  "tests-omni.app.precache_exts_demo*",
]
args = [
    "--/app/extensions/registryEnabled=0", # It should start ok without a registry enabled (everything prebundled)
    "--/app/hangDetector/enabled=0",
    "--/app/fastShutdown=1",
    "--/exts/omni.kit.test/testExtArgs/0=\"--/app/hangDetector/enabled=0\"",
    "--/exts/omni.kit.test/testExtArgs/1=\"--/app/fastShutdown=1\"",
    "--/exts/omni.kit.test/testExtArgs/2=\"--/rtx/verifyDriverVersion/enabled=false\"",
#    "--/exts/omni.kit.test/testExtArgs/3=\"--no-window\""
]
timeout = 1800

# Run unit test suite
[repo_test.suites.unit]
kind = "glob_and_exec"
path = "${test_root}"

[[repo_test.suites.unit.group]]
include = [
    "tests-lightspeed.*${shell_ext}"
]
exclude = []
"platform:linux-x86_64".exclude = [
  "tests-omni.app.precache_exts_demo*",
]
args = [
    "--/app/extensions/registryEnabled=0", # It should start ok without a registry enabled (everything prebundled)
    "--/app/hangDetector/enabled=0",
    "--/app/fastShutdown=1",
    "--no-window",
    "--/exts/omni.kit.test/testExtArgs/0=\"--/app/hangDetector/enabled=0\"",
    "--/exts/omni.kit.test/testExtArgs/1=\"--/app/fastShutdown=1\"",
    "--/exts/omni.kit.test/testExtArgs/2=\"--/rtx/verifyDriverVersion/enabled=false\"",
    "--/exts/omni.kit.test/testExtArgs/3=\"--no-window\"",
    "--/exts/omni.kit.test/runTestsFilter='lightspeed.*.tests.unit.*'",
]
timeout = 1800

# Run end-to-end test suite
[repo_test.suites.e2e]
kind = "glob_and_exec"
path = "${test_root}"

[[repo_test.suites.e2e.group]]
include = [
    "tests-lightspeed.*${shell_ext}"
]
exclude = []
"platform:linux-x86_64".exclude = [
  "tests-omni.app.precache_exts_demo*",
]
args = [
    "--/app/extensions/registryEnabled=0", # It should start ok without a registry enabled (everything prebundled)
    "--/app/hangDetector/enabled=0",
    "--/app/fastShutdown=1",
    "--/exts/omni.kit.test/testExtArgs/0=\"--/app/hangDetector/enabled=0\"",
    "--/exts/omni.kit.test/testExtArgs/1=\"--/app/fastShutdown=1\"",
    "--/exts/omni.kit.test/testExtArgs/2=\"--/rtx/verifyDriverVersion/enabled=false\"",
    "--/exts/omni.kit.test/runTestsFilter='lightspeed.*.tests.e2e.*'",
]
timeout = 1800

########################################################################################################################
# Packaging
########################################################################################################################

[repo_package]
windows_max_path_length = 240

[repo_package.packages.main_package]
# package content
release.files = [
    ["**"],
]
release.files_exclude = [
    ["**/*.pdb"],
    ["**/*.exp"],
    ["kit/**"],
    ["apps/kit.portable"]
]
"linux-x86_64".files_strip = [
    ["**/*.so"],
]
"linux-x86_64".files_strip_exclude = [
]
omniverse_flow_version_scheme = true
archive_format = "zip"
strip_package_infos = true

########################################################################################################################
# Changelog generation
########################################################################################################################

[repo_changelog]
changelog_gitlab_repo_id = 51138

[repo_changelog.packages.main_package]
enabled = true

########################################################################################################################
# Extensions publisher
########################################################################################################################

[repo_publish_exts]

# Extensions to publish, include and exclude among those discovered by kit. Wildcards are supported.
exts.include = []
exts.exclude = []

# verify before publishing
publish_verification = true


########################################################################################################################
# Extensions precacher
########################################################################################################################

[repo_precache_exts]
# Apps to run and precache
apps = [
    "${root}/source/apps/lightspeed.app.trex.kit",
    "${root}/source/apps/lightspeed.app.trex.ingestcraft.kit",
    "${root}/source/apps/lightspeed.app.trex.stagecraft.kit",
    "${root}/source/apps/lightspeed.app.trex.texturecraft.kit",
    "${root}/source/apps/lightspeed.app.trex_dev.kit",
    "${root}/source/apps/omni.app.lightspeed.kit",
    "${root}/source/extensions/lightspeed.trex.project_wizard.core/apps/lightspeed.app.trex.project_wizard_cli.kit"
]



########################################################################################################################
# Documentation building
########################################################################################################################

[repo_docs]
enabled = true

project = "${conf:repo.name}"
name = "Kit Extension Template"
copyright_start = 2021

config = "release"

doxygen_input = [
    "include/omni/example/IBattleSimulator.h",
]

doxygen_aliases = [
]

extra_sys_paths = [
    "${root}/_build/${platform_target}/release/kit/exts/*/bin",
    "${root}/_build/${platform_target}/release/kit/exts/*",
    "${root}/_build/${platform_target}/release/kit/extscore/*",
    "${root}/_build/${platform_target}/release/kit",
    "${root}/_build/${platform_target}/release/kit/plugins",
    "${root}/_build/${platform_target}/release/kit/plugins/bindings-python",
]

sphinx_exclude_patterns = [
    "include",
    "tools",
    "_build",
    "VERSION.md",
    "source/extensions/lightspeed_example*",
]

repo_url = "https://gitlab-master.nvidia.com/omniverse/kit-extensions/kit-template/-/blob/master"

deps = [
    [ "repo_docs", "${root}/_repo/deps/repo_docs/_build/docs/repo_docs/latest"]
]

[repo_docs.editions.s3web]
protocol = "s3"
bucket_name = "omniverse-docs"
bucket_dir = "${project}/${version}"

########################################################################################################################
# Code Format Tool
########################################################################################################################

# C++ is formatted with clang-format:
[repo_format.cpp]
files.include = ["**"]
files.exclude = [
    ".vscode/*",
    "_build/*",
    "_compiler/*",
    "_repo/*",
    ".git/*",
    ".eggs/*",
    ".venv/*",
    "tools/*",
]

# python is formatted with black+isort:
[repo_format.python]
files.include = ["**/*.py"]
files.exclude = [
    ".vscode/*",
    "_build/*",
    "_compiler/*",
    "_repo/*",
    ".git/*",
    ".eggs/*",
    ".venv/*",
    "tools/*",
    "source/*/lightspeed/common/tools/*"
]
python_version = "py37"
job_count = 1


########################################################################################################################
# Python lint tool
########################################################################################################################

[repo_lint]
files.include = ["**/*.py"]
files.exclude = [
    ".vscode/*",
    "_build/*",
    "_compiler/*",
    "_repo/*",
    ".git/*",
    ".eggs/*",
    ".venv/*",
    "tools/*",
    "source/*/lightspeed/common/tools/*"
]

########################################################################################################################
# Launcher publish and deploy
########################################################################################################################

[repo_deploy_launcher]
enabled = true
git_url = "https://oauth2:${env:TREX_RELEASE_TOKEN}@gitlab-master.nvidia.com/omniverse/trex-release-pipeline.git"
