"""
* SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
* SPDX-License-Identifier: Apache-2.0
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* https://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
"""
import os
import re
from typing import List

import omni.client


class AssetDetailCore:

    THUMBNAILS_DIR = "custom_thumbnails"

    def _get_autogenerated_thumbnails(self, path, auto=False):
        dir_path = os.path.dirname(path)
        autogenerated_thumbnails_dir = omni.client.normalize_url(dir_path)
        if auto:
            thumbnail = f"{autogenerated_thumbnails_dir}/.thumbs/256x256/{os.path.basename(path)}.auto.png"
        else:
            thumbnail = f"{autogenerated_thumbnails_dir}/.thumbs/256x256/{os.path.basename(path)}.png"

        result, _ = omni.client.stat(thumbnail)
        if result == omni.client.Result.OK:
            return thumbnail
        if not auto:
            return self._get_autogenerated_thumbnails(path, auto=True)

        return ""

    def get_primary_thumbnails(self, path) -> str:
        """Get the primary thumbnail from the current asset"""
        dir_path = os.path.dirname(path)
        custom_thumbnails_dir = omni.client.normalize_url(f"{dir_path}/{self.THUMBNAILS_DIR}")
        entries = self.list_entries_custom_thumbnails_dir(custom_thumbnails_dir)
        for entry in entries:
            match = f"{os.path.basename(path)}.primary_thumb.png"
            if entry.relative_path == match:
                return f"{custom_thumbnails_dir}/{entry.relative_path}"
        return self._get_autogenerated_thumbnails(path)

    def get_additional_thumbnail(self, path) -> List[str]:
        """Get additional thumbnails from the current asset"""
        result = []
        dir_path = os.path.dirname(path)
        custom_thumbnails_dir = omni.client.normalize_url(f"{dir_path}/{self.THUMBNAILS_DIR}")
        entries = self.list_entries_custom_thumbnails_dir(custom_thumbnails_dir)
        for entry in entries:
            regex = f"^{os.path.basename(path)}.[^primary_thumb]\S+.png$"  # noqa W605
            if re.match(regex, entry.relative_path):
                result.append(f"{custom_thumbnails_dir}/{entry.relative_path}")

        return result

    @staticmethod
    def list_entries_custom_thumbnails_dir(custom_thumbnails_dir):
        """List entries"""
        result, entry = omni.client.stat(custom_thumbnails_dir)
        if result == omni.client.Result.OK and entry.flags & omni.client.ItemFlags.CAN_HAVE_CHILDREN:
            (result, entries) = omni.client.list(custom_thumbnails_dir)
            if result == omni.client.Result.OK:
                return entries
        return []
