[package]
# Semantic Versionning is used: https://semver.org/
version = "1.0.2"

# Lists people or organizations that are considered the "authors" of the package.
authors = ["Pierre-Olivier Trottier <ptrottier@nvidia.com>"]

description = "Internal PIP archive for Flux"

# Path (relative to the root) or content of readme markdown file for UI.
readme = "docs/README.md"

title = "Internal Pip Archive"
category = "Utility"

# Keywords for the extension
keywords = ["kit", "pip", "flux"]

changelog = "docs/CHANGELOG.md"

# Preview image and icon. Folder named "data" automatically goes in git lfs (see .gitattributes file).
# Preview image is shown in "Overview" of Extensions window. Screenshot of an extension might be a good preview image.
preview_image = "data/preview.png"

# Icon is shown in Extensions window, it is recommended to be square, of size 256x256.
icon = "data/icon.png"

# publish to each platform & kit version separately
writeTarget.platform = true

[package.target]
python = ["cp310"]

[core]
# Load as early as possible
order = -2000
reloadable = false

[dependencies]
"omni.kit.pipapi" = {} # We need it so that we can use [python.pipapi].

# We bundle not only "toml" package, but many other. No need to mention all of them, just importing one will add whole
# folder (pip_prebundle) to sys.path.
[[python.module]]
path = "pip_prebundle"

# That is empty module, added here only to make tests discoverable in test run
[[python.module]]
name = "omni.flux.internal_pip_archive"

[python.pipapi]
# That extension brings folder with pip wheels, to enable offline pip install (prebundling). It is specified here:
archiveDirs = ["pip_archive"]

# https://pip.pypa.io/en/stable/reference/pip_install/#requirements-file-format
requirements = []

[[test]]
dependencies = [
    "omni.flux.tests.settings",
]

stdoutFailPatterns.exclude = [
    "*[omni.kit.registry.nucleus.utils.common] Skipping deletion of:*",
]
