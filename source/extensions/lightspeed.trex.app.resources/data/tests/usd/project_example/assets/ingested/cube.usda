#usda 1.0
(
    defaultPrim = "Root"
    endTimeCode = 100
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 30
    upAxis = "Y"
)

def Xform "Root"
{
    def Mesh "Toto"
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]
        float2[] invertedUvs = [(0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0), (0, -1), (0, -0), (1, -0), (1, -1), (0, -0), (1, -0), (1, -1), (0, -1), (0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0)]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
            interpolation = "vertex"
        )
        point3f[] points = [(-50, -50, 50), (50, -50, 50), (50, 50, 50), (-50, 50, 50), (-50, -50, -50), (-50, 50, -50), (50, 50, -50), (50, -50, -50), (-50, 50, -50), (-50, 50, 50), (50, 50, 50), (50, 50, -50), (-50, -50, -50), (50, -50, -50), (50, -50, 50), (-50, -50, 50), (-50, -50, -50), (-50, -50, 50), (-50, 50, 50), (-50, 50, -50), (50, -50, -50), (50, 50, -50), (50, 50, 50), (50, -50, 50)]
        texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:st:indices = None
        uniform token subdivisionScheme = "none"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 50, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Mesh "Cube_01"
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]
        float2[] invertedUvs = [(0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0), (0, -1), (0, -0), (1, -0), (1, -1), (0, -0), (1, -0), (1, -1), (0, -1), (0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0)]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
            interpolation = "vertex"
        )
        point3f[] points = [(-50, -50, 50), (50, -50, 50), (50, 50, 50), (-50, 50, 50), (-50, -50, -50), (-50, 50, -50), (50, 50, -50), (50, -50, -50), (-50, 50, -50), (-50, 50, 50), (50, 50, 50), (50, 50, -50), (-50, -50, -50), (50, -50, -50), (50, -50, 50), (-50, -50, 50), (-50, -50, -50), (-50, -50, 50), (-50, 50, 50), (-50, 50, -50), (50, -50, -50), (50, 50, -50), (50, 50, 50), (50, -50, 50)]
        texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:st:indices = None
        uniform token subdivisionScheme = "none"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 50, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Mesh "Cube_02"
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]
        float2[] invertedUvs = [(0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0), (0, -1), (0, -0), (1, -0), (1, -1), (0, -0), (1, -0), (1, -1), (0, -1), (0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0)]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
            interpolation = "vertex"
        )
        point3f[] points = [(-50, -50, 50), (50, -50, 50), (50, 50, 50), (-50, 50, 50), (-50, -50, -50), (-50, 50, -50), (50, 50, -50), (50, -50, -50), (-50, 50, -50), (-50, 50, 50), (50, 50, 50), (50, 50, -50), (-50, -50, -50), (50, -50, -50), (50, -50, 50), (-50, -50, 50), (-50, -50, -50), (-50, -50, 50), (-50, 50, 50), (-50, 50, -50), (50, -50, -50), (50, 50, -50), (50, 50, 50), (50, -50, 50)]
        texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:st:indices = None
        uniform token subdivisionScheme = "none"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 50, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }

    def Mesh "Cube_03"
    {
        int[] faceVertexCounts = [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
        int[] faceVertexIndices = [0, 1, 2, 0, 2, 3, 4, 5, 6, 4, 6, 7, 8, 9, 10, 8, 10, 11, 12, 13, 14, 12, 14, 15, 16, 17, 18, 16, 18, 19, 20, 21, 22, 20, 22, 23]
        float2[] invertedUvs = [(0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0), (0, -1), (0, -0), (1, -0), (1, -1), (0, -0), (1, -0), (1, -1), (0, -1), (0, -0), (1, -0), (1, -1), (0, -1), (1, -0), (1, -1), (0, -1), (0, -0)]
        normal3f[] normals = [(0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, 1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 0, -1), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, 1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (0, -1, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (-1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0), (1, 0, 0)] (
            interpolation = "vertex"
        )
        point3f[] points = [(-50, -50, 50), (50, -50, 50), (50, 50, 50), (-50, 50, 50), (-50, -50, -50), (-50, 50, -50), (50, 50, -50), (50, -50, -50), (-50, 50, -50), (-50, 50, 50), (50, 50, 50), (50, 50, -50), (-50, -50, -50), (50, -50, -50), (50, -50, 50), (-50, -50, 50), (-50, -50, -50), (-50, -50, 50), (-50, 50, 50), (-50, 50, -50), (50, -50, -50), (50, 50, -50), (50, 50, 50), (50, -50, 50)]
        texCoord2f[] primvars:st = [(0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0), (0, 1), (0, 0), (1, 0), (1, 1), (0, 0), (1, 0), (1, 1), (0, 1), (0, 0), (1, 0), (1, 1), (0, 1), (1, 0), (1, 1), (0, 1), (0, 0)] (
            interpolation = "vertex"
        )
        int[] primvars:st:indices = None
        uniform token subdivisionScheme = "none"
        double3 xformOp:rotateXYZ = (0, 0, 0)
        double3 xformOp:scale = (1, 1, 1)
        double3 xformOp:translate = (0, 50, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
    }
}

def "Environment"
{
    custom string ground:type = "Off"
}
