#usda 1.0
(
    customLayerData = {
        dictionary cameraSettings = {
            string boundCamera = "/RootNode/Camera"
        }
        string lightspeed_layer_type = "capture"
        dictionary omni_layer = {
            dictionary muteness = {
            }
        }
    }
    defaultPrim = "RootNode"
    endTimeCode = 0
    metersPerUnit = 1
    startTimeCode = 0
    timeCodesPerSecond = 1
    upAxis = "Z"
)

def "RootNode"
{
    def "lights"
    {
        def SphereLight "sphereLight_3C659AB59DED28BB"
        {
            color3f color = (0.6804372, 0.8641359, 1)
            float intensity = 0
            float intensity.timeSamples = {
                0: 137983.92,
                5e-324: 0,
            }
            float radius = 1.16
            matrix4d xformOp:transform.timeSamples = {
                0: ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (312, 280, 241, 1) ),
            }
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def "meshes"
    {
        def Xform "mesh_1714784A67BC21F8" (
            instanceable = true
            prepend references = @./meshes/mesh_1714784A67BC21F8.usd@</mesh_1714784A67BC21F8>
        )
        {
            rel material:binding = </RootNode/Looks/mat_F5CE656D9F82F196>
            token visibility = "invisible"
        }
    }

    def "Looks"
    {
        def Material "mat_F5CE656D9F82F196" (
            prepend references = @./materials/mat_F5CE656D9F82F196.usd@</Looks/mat_F5CE656D9F82F196>
        )
        {
        }
    }

    def "instances"
    {
        def Xform "inst_1714784A67BC21F8_0" (
            instanceable = true
            prepend references = </RootNode/meshes/mesh_1714784A67BC21F8>
        )
        {
            rel material:binding = </RootNode/Looks/mat_F5CE656D9F82F196>
            token visibility = "inherited"
            token visibility.timeSamples = {
                0: "inherited",
                5e-324: "invisible",
            }
            matrix4d xformOp:transform.timeSamples = {
                0: ( (-0.9912359118461609, -0.0854286178946495, -0.10076329857110977, 0), (0.08582086116075516, -0.9963104724884033, 0.00044370806426741183, 0), (-0.10042943805456161, -0.008207772858440876, 0.9949102997779846, 0), (-42.02739715576172, 837.9118041992188, 63.965999603271484, 1) ),
            }
            uniform token[] xformOpOrder = ["xformOp:transform"]
        }
    }

    def Camera "Camera"
    {
        float2 clippingRange = (7, 29996.916)
        float focalLength = 10.240908
        float horizontalAperture = 20.955
        float verticalAperture = 11.787188
        matrix4d xformOp:transform.timeSamples = {
            0: ( (-0.08658816665410995, 0.9962441921234131, 4.6566128730773926e-9, -0), (-0.10073842853307724, -0.008755644783377647, 0.9948744177818298, 0), (0.9911378622055054, 0.0861443504691124, 0.10111820697784424, -0), (-42.16962814331055, 837.2620849609375, 64.03125, 1) ),
        }
        uniform token[] xformOpOrder = ["xformOp:transform"]
    }
}

