-- --------------------------------------------------------------------------------------------------------------------
-- Build file for the build tools used by the OmniGraph Python template extension. These are tools required in order to
-- Build file for the build tools used by the lightspeed.trex.logic.ogn extension. These are tools required in order to
-- run the build on that extension, and all extensions dependent on it.

-- --------------------------------------------------------------------------------------------------------------------
-- This sets up a shared extension configuration, used by most Kit extensions.
local ext = get_current_extension_info()

-- --------------------------------------------------------------------------------------------------------------------
-- Set up a variable containing standard configuration information for projects containing OGN files.
-- The string corresponds to the Python module name, in this case lightspeed.trex.logic.ogn.
local ogn = get_ogn_project_information(ext, "lightspeed/trex/logic/ogn")

-- --------------------------------------------------------------------------------------------------------------------
-- Put this project into the "omnigraph" IDE group. You might choose a different name for convenience.
ext.group = "remix"

-- --------------------------------------------------------------------------------------------------------------------
-- Define a build project to process the ogn files to create the generated code that will be used by the node
-- implementations. The (optional) "toc" value points to the directory where the table of contents with the OmniGraph
-- nodes in this extension will be generated. Omit it if you will be generating your own table of contents.
project_ext_ogn( ext, ogn, { toc="docs/Overview.md" } )

-- --------------------------------------------------------------------------------------------------------------------
-- Build project responsible for generating the Python nodes and installing them and any scripts into the build tree.
project_ext( ext, { generate_ext_project=true })

    -- These lines add the files in the project to the IDE where the first argument is the group and the second
    -- is the set of files in the source tree that are populated into that group.
    add_files("python", "*.py")
    add_files("python/_impl", "python/_impl/**.py")
    add_files("python/nodes", "python/nodes")
    add_files("python/tests", "python/tests")
    add_files("docs", "docs")
    add_files("data", "data")

    -- Add the standard dependencies all OGN projects have. The second parameter is a table of all directories
    -- containing Python nodes. Here there is only one.
    add_ogn_dependencies(ogn, {"python/nodes"})

    -- Copy the init script directly into the build tree. This is required because the build will create an ogn/
    -- subdirectory in the Python module so only the subdirectories can be linked.
    repo_build.prebuild_copy {
        { "python/__init__.py", ogn.python_target_path },
    }

    -- Linking directories allows them to hot reload when files are modified in the source tree.
	-- Docs are linked to get the README into the extension window.
    -- Data contains the images used by the extension configuration preview.
    -- The "nodes/" directory does not have to be mentioned here as it will be handled by add_ogn_dependencies() above.
    repo_build.prebuild_link {
        { "docs", ext.target_dir.."/docs" },
        { "data", ext.target_dir.."/data" },
        { "python/tests", ogn.python_tests_target_path },
        { "python/_impl", ogn.python_target_path.."/_impl" },
    }

-- With the above copy/link operations this is what the source and build trees will look like
--
-- SOURCE                             BUILD
-- omni.graph.template.python/        omni.graph.template.python/
--   config/                            config@ -> SOURCE/config
--   data/                              data@ -> SOURCE/data
--   docs/                              docs@ -> SOURCE/docs
--   python/                            ogn/  (generated by the build)
--     __init__.py                      omni/
--     _impl/                             graph/
--     nodes/                               template/
--                                            python/
--                                              __init__.py  (copied from SOURCE/python)
--                                              _impl@ -> SOURCE/python/_impl
--                                              nodes@ -> SOURCE/python/nodes
--                                              tests@ -> SOURCE/python/tests
--                                              ogn/  (Generated by the build)
