[package]
version = "2024.4.0-RC.6"
category = "Application"
title = "NVIDIA RTX Remix IngestCraft CLI"
description = "Experience used by the Mass Ingestion CLI. It defines everything we need for Lightspeed (materials, etc)"
authors = ["Damien Bataille <dbataille@nvidia.com>"]
repository = "https://gitlab-master.nvidia.com/lightspeedrtx/lightspeed-kit"
keywords = ["lightspeed", "rtx", "remix", "app", "ingestcraft", "CLI"]
changelog = """
# NVIDIA RTX Remix IngestCraft CLI
"""
readme = """
# NVIDIA RTX Remix IngestCraft

A tool to ingest asset(s) for RTX Remix
"""

[dependencies]
# needed for the schema setting at the bottom
"omni.flux.validator.plugin.check.usd" = { order = -10 } # to always start before the manager
"omni.flux.validator.plugin.context.usd_stage" = { order = -10 } # to always start before the manager
"omni.flux.validator.plugin.resultor.file" = { order = -10 } # to always start before the manager
"omni.flux.validator.plugin.selector.usd" = { order = -10 } # to always start before the manager

# in batch mode, we need an hydra engine to be loaded or load_mdl_parameters_for_prim_async will not work
"omni.hydra.pxr" = {}

[settings]
"@import@" = [
    "./lightspeed.app.trex.app.settings.toml",
    "./lightspeed.app.rendering.settings.toml",
]

# Basic Kit App
################################
app.name = "RTX Remix IngestCraft CLI"

[settings.app.window]
title = "NVIDIA RTX Remix IngestCraft CLI"
iconPath = "${lightspeed.trex.app.resources}/data/icons/nvidia-rtx-remix-icon-dbp-256.ico"

[settings.app.viewport]
usdcontext-ingestcraft.scene.cameras.visible=false
show.camera=false  # legacy

[[test]]
dependencies = [
    "lightspeed.trex.tests.dependencies",
]

stdoutFailPatterns.exclude = [
    # This may be fixable by more tightly controlling initialization order,
    # but it doesn't appear to actually cause any problems.
    "*[omni.kit.scene_view.opengl] No UsdRender.Product was found at '{render_product_path}'*",
]

# We can run all extension tests inside of an app. In practice many of them failing and crashing, that requires time
# investment to fix. Add one extension, to keep pipeline working:
pythonTests.include = [
]
pythonTests.exclude = [
]
timeout = 600



########################################################################################################################
# BEGIN GENERATED PART (Remove from 'BEGIN' to 'END' to regenerate)
########################################################################################################################

# Kit SDK Version: 106.0.0+release.118399.fcefe91f.gl

# Version lock for all dependencies:
[settings.app.exts]
enabled = [
	"omni.kit.asset_converter-2.1.11",
	"omni.kit.browser.asset-1.3.9",
	"omni.kit.browser.core-2.3.11",
	"omni.kit.browser.folder.core-1.9.12",
	"omni.kit.widget.zoombar-1.0.5",
]

########################################################################################################################
# END GENERATED PART
########################################################################################################################
